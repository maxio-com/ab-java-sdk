/*
 * MaxioAdvancedBillingFormerlyChargifyAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.chargify.subdomain.controllers;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertNotNull;
import static org.junit.Assert.assertTrue;

import com.chargify.subdomain.ApiHelper;
import com.chargify.subdomain.MaxioAdvancedBillingFormerlyChargifyAPIClient;
import com.chargify.subdomain.exceptions.ApiException;
import com.chargify.subdomain.models.BasicDateFieldEnum;
import com.chargify.subdomain.models.CreateProductFamilyRequest;
import com.chargify.subdomain.models.ProductFamilyResponse;
import io.apimatic.core.utilities.TestHelper;
import java.util.LinkedHashMap;
import java.util.List;
import java.util.Map;
import org.junit.AfterClass;
import org.junit.BeforeClass;
import org.junit.Test;

public class ProductFamiliesControllerTest extends BaseControllerTest {

    /**
     * Client instance.
     */
    private static MaxioAdvancedBillingFormerlyChargifyAPIClient client;
    
    /**
     * Controller instance (for all tests).
     */
    private static ProductFamiliesController controller;

    /**
     * Setup test class.
     */
    @BeforeClass
    public static void setUpClass() {
        client = createConfiguration();
        controller = client.getProductFamiliesController();
    }

    /**
     * Tear down test class.
     */
    @AfterClass
    public static void tearDownClass() {
        controller = null;
    }

    /**
     * This method will create a Product Family within your Chargify site. Create a Product Family
     * to act as a container for your products, components and coupons. Full documentation on how
     * Product Families operate within the Chargify UI can be located
     * [here](https://maxio-chargify.zendesk.com/hc/en-us/articles/5405369633421).
     * @throws Throwable exception if occurs.
     */
    @Test
    public void testTestCreateProductFamily() throws Exception {
        // Parameters for the API call
        CreateProductFamilyRequest body = ApiHelper.deserialize(
                "{\"product_family\":{\"name\":\"Acme Projects\",\"description\":\"Amazing project "
                + "management tool\"}}",
                CreateProductFamilyRequest.class);

        // Set callback and perform API call
        ProductFamilyResponse result = null;
        try {
            result = controller.createProductFamily(body);
        } catch (ApiException e) {
            // Empty block
        }

        // Test whether the response is null
        assertNotNull("Response is null", 
                httpResponse.getResponse());
        // Test response code
        assertEquals("Status is not 200", 
                200, httpResponse.getResponse().getStatusCode());

        // Test headers
        Map<String, String> headers = new LinkedHashMap<String, String>();
        headers.put("Content-Type", "application/json");
        
        assertTrue("Headers do not match", TestHelper.areHeadersProperSubsetOf(
                headers, httpResponse.getResponse().getHeaders().asSimpleMap(), true));

        // Test whether the captured response is as we expected
        assertNotNull("Result does not exist", 
                result);
        assertTrue("Response body does not match in keys", 
                TestHelper.isJsonObjectProperSubsetOf(
                "{\"product_family\":{\"id\":933860,\"name\":\"Acme Projects\",\"description\":\"Am"
                + "azing project management tool\",\"handle\":\"acme-projects\",\"accounting_code"
                + "\":null}}",
                TestHelper.convertStreamToString(httpResponse.getResponse().getRawBody()), 
                false, true, false));
    }

    /**
     * This method allows to retrieve a list of Product Families for a site.
     * @throws Throwable exception if occurs.
     */
    @Test
    public void testTestListProductFamilies() throws Exception {
        // Parameters for the API call
        BasicDateFieldEnum dateField = BasicDateFieldEnum.fromString(
                "updated_at");
        String startDate = null;
        String endDate = null;
        String startDatetime = null;
        String endDatetime = null;

        // Set callback and perform API call
        List<ProductFamilyResponse> result = null;
        try {
            result = controller.listProductFamilies(dateField, startDate, endDate, startDatetime, endDatetime);
        } catch (ApiException e) {
            // Empty block
        }

        // Test whether the response is null
        assertNotNull("Response is null", 
                httpResponse.getResponse());
        // Test response code
        assertEquals("Status is not 200", 
                200, httpResponse.getResponse().getStatusCode());

        // Test headers
        Map<String, String> headers = new LinkedHashMap<String, String>();
        headers.put("Content-Type", "application/json");
        
        assertTrue("Headers do not match", TestHelper.areHeadersProperSubsetOf(
                headers, httpResponse.getResponse().getHeaders().asSimpleMap(), true));

        // Test whether the captured response is as we expected
        assertNotNull("Result does not exist", 
                result);
        assertTrue("Response body does not match in keys",
                TestHelper.isArrayOfJsonObjectsProperSubsetOf(
                "[{\"product_family\":{\"id\":37,\"name\":\"Acme Projects\",\"description\":null,"
                + "\"handle\":\"acme-projects\",\"accounting_code\":null,\"created_at\":\"2013-02-2"
                + "0T15:05:51-07:00\",\"updated_at\":\"2013-02-20T15:05:51-07:00\"}},{\"product_fam"
                + "ily\":{\"id\":155,\"name\":\"Bat Family\",\"description\":\"Another family.\","
                + "\"handle\":\"bat-family\",\"accounting_code\":null,\"created_at\":\"2014-04-16T1"
                + "2:41:13-06:00\",\"updated_at\":\"2014-04-16T12:41:13-06:00\"}}]",
                TestHelper.convertStreamToString(httpResponse.getResponse().getRawBody()), 
                false, true, false));
    }

}
