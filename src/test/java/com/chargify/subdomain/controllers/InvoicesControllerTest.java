/*
 * MaxioAdvancedBillingFormerlyChargifyAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.chargify.subdomain.controllers;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertNotNull;
import static org.junit.Assert.assertTrue;

import com.chargify.subdomain.ApiHelper;
import com.chargify.subdomain.MaxioAdvancedBillingFormerlyChargifyAPIClient;
import com.chargify.subdomain.exceptions.ApiException;
import com.chargify.subdomain.models.CreateMultiInvoicePaymentRequest;
import com.chargify.subdomain.models.DirectionEnum;
import com.chargify.subdomain.models.InvoiceDateFieldEnum;
import com.chargify.subdomain.models.InvoiceEventTypeEnum;
import com.chargify.subdomain.models.InvoiceSortFieldEnum;
import com.chargify.subdomain.models.ListCreditNotesResponse;
import com.chargify.subdomain.models.ListInvoiceEventsResponse;
import com.chargify.subdomain.models.ListInvoicesResponse;
import com.chargify.subdomain.models.MultiInvoicePaymentResponse;
import com.chargify.subdomain.models.StatusEnum;
import io.apimatic.core.utilities.TestHelper;
import java.util.LinkedHashMap;
import java.util.List;
import java.util.Map;
import org.junit.AfterClass;
import org.junit.BeforeClass;
import org.junit.Test;

public class InvoicesControllerTest extends BaseControllerTest {

    /**
     * Client instance.
     */
    private static MaxioAdvancedBillingFormerlyChargifyAPIClient client;
    
    /**
     * Controller instance (for all tests).
     */
    private static InvoicesController controller;

    /**
     * Setup test class.
     */
    @BeforeClass
    public static void setUpClass() {
        client = createConfiguration();
        controller = client.getInvoicesController();
    }

    /**
     * Tear down test class.
     */
    @AfterClass
    public static void tearDownClass() {
        controller = null;
    }

    /**
     * By default, invoices returned on the index will only include totals, not detailed breakdowns
     * for `line_items`, `discounts`, `taxes`, `credits`, `payments`, `custom_fields`, or `refunds`.
     * To include breakdowns, pass the specific field as a key in the query with a value set to
     * `true`.
     * @throws Throwable exception if occurs.
     */
    @Test
    public void testTestListInvoices() throws Exception {
        // Parameters for the API call
        String startDate = null;
        String endDate = null;
        StatusEnum status = null;
        Integer subscriptionId = null;
        String subscriptionGroupUid = null;
        Integer page = 1;
        Integer perPage = 20;
        DirectionEnum direction = DirectionEnum.fromString(
                "desc");
        Boolean lineItems = false;
        Boolean discounts = false;
        Boolean taxes = false;
        Boolean credits = false;
        Boolean payments = false;
        Boolean customFields = false;
        Boolean refunds = false;
        InvoiceDateFieldEnum dateField = InvoiceDateFieldEnum.fromString(
                "due_date");
        String startDatetime = null;
        String endDatetime = null;
        List<Object> customerIds = ApiHelper.deserializeArray(
                "[1,2,3]",
                Object[].class);
        List<String> number = ApiHelper.deserializeArray(
                "[\"1234\",\"1235\"]",
                String[].class);
        List<Integer> productIds = ApiHelper.deserializeArray(
                "[23,34]",
                Integer[].class);
        InvoiceSortFieldEnum sort = InvoiceSortFieldEnum.fromString(
                "number");

        // Set callback and perform API call
        ListInvoicesResponse result = null;
        try {
            result = controller.listInvoices(startDate, endDate, status, subscriptionId, subscriptionGroupUid, page, perPage, direction, lineItems, discounts, taxes, credits, payments, customFields, refunds, dateField, startDatetime, endDatetime, customerIds, number, productIds, sort);
        } catch (ApiException e) {
            // Empty block
        }

        // Test whether the response is null
        assertNotNull("Response is null", 
                httpResponse.getResponse());
        // Test response code
        assertEquals("Status is not 200", 
                200, httpResponse.getResponse().getStatusCode());

        // Test headers
        Map<String, String> headers = new LinkedHashMap<String, String>();
        headers.put("Content-Type", "application/json");
        
        assertTrue("Headers do not match", TestHelper.areHeadersProperSubsetOf(
                headers, httpResponse.getResponse().getHeaders().asSimpleMap(), true));

        // Test whether the captured response is as we expected
        assertNotNull("Result does not exist", 
                result);
        assertTrue("Response body does not match in keys", 
                TestHelper.isJsonObjectProperSubsetOf(
                "{\"invoices\":[{\"uid\":\"inv_8htcd29wcq3q6\",\"site_id\":51288,\"customer_id\":20"
                + "153415,\"subscription_id\":23277588,\"number\":\"125\",\"sequence_number\":125,"
                + "\"issue_date\":\"2018-09-20\",\"due_date\":\"2018-09-20\",\"paid_date\":\"2018-0"
                + "9-20\",\"status\":\"paid\",\"collection_method\":\"automatic\",\"payment_instruc"
                + "tions\":\"Make checks payable to Acme, Inc.\",\"currency\":\"USD\",\"consolidati"
                + "on_level\":\"parent\",\"parent_invoice_uid\":null,\"parent_invoice_number\":null"
                + ",\"group_primary_subscription_id\":23277588,\"product_name\":\"Trial and setup f"
                + "ee\",\"product_family_name\":\"Billing Plans\",\"seller\":{\"name\":\"General Go"
                + "ods\",\"address\":{\"street\":\"123 General Goods Way\",\"line2\":\"Apt. 10\","
                + "\"city\":\"Boston\",\"state\":\"MA\",\"zip\":\"02120\",\"country\":\"US\"},\"pho"
                + "ne\":\"555-555-1212\"},\"customer\":{\"chargify_id\":20153415,\"first_name\":\"M"
                + "eg\",\"last_name\":\"Example\",\"organization\":\"\",\"email\":\"meg@example.com"
                + "\"},\"memo\":\"Please pay within 15 days.\",\"billing_address\":{\"street\":\"12"
                + "3 I Love Cats Way\",\"line2\":\"\",\"city\":\"Boston\",\"state\":\"MA\",\"zip\":"
                + "\"90210\",\"country\":\"US\"},\"shipping_address\":{\"street\":\"123 I Love Cats"
                + " Way\",\"line2\":\"\",\"city\":\"Boston\",\"state\":\"MA\",\"zip\":\"90210\",\"c"
                + "ountry\":\"US\"},\"subtotal_amount\":\"100.0\",\"discount_amount\":\"0.0\",\"tax"
                + "_amount\":\"0.0\",\"total_amount\":\"100.0\",\"credit_amount\":\"0.0\",\"paid_am"
                + "ount\":\"100.0\",\"refund_amount\":\"0.0\",\"due_amount\":\"0.0\"},{\"uid\":\"in"
                + "v_8hr3546xp4h8n\",\"site_id\":51288,\"customer_id\":21687686,\"subscription_id"
                + "\":22007644,\"number\":\"124\",\"sequence_number\":124,\"issue_date\":\"2018-09-"
                + "18\",\"due_date\":\"2018-09-18\",\"paid_date\":null,\"status\":\"open\",\"collec"
                + "tion_method\":\"remittance\",\"payment_instructions\":\"Make checks payable to A"
                + "cme, Inc.\",\"currency\":\"USD\",\"consolidation_level\":\"none\",\"parent_invoi"
                + "ce_uid\":null,\"parent_invoice_number\":null,\"group_primary_subscription_id\":n"
                + "ull,\"product_name\":\"Trial and setup fee\",\"product_family_name\":\"Billing P"
                + "lans\",\"seller\":{\"name\":\"General Goods\",\"address\":{\"street\":\"123 Gene"
                + "ral Goods Way\",\"line2\":\"Apt. 10\",\"city\":\"Boston\",\"state\":\"MA\",\"zip"
                + "\":\"02120\",\"country\":\"US\"},\"phone\":\"555-555-1212\"},\"customer\":{\"cha"
                + "rgify_id\":21687686,\"first_name\":\"Charlene\",\"last_name\":\"Tester\",\"organ"
                + "ization\":\"\",\"email\":\"food@example.com\"},\"memo\":\"Please pay within 15 d"
                + "ays.\",\"billing_address\":{\"street\":\"\",\"line2\":\"\",\"city\":\"\",\"state"
                + "\":\"\",\"zip\":\"\",\"country\":\"\"},\"shipping_address\":{\"street\":\"\",\"l"
                + "ine2\":\"\",\"city\":\"\",\"state\":\"\",\"zip\":\"\",\"country\":\"\"},\"subtot"
                + "al_amount\":\"100.0\",\"discount_amount\":\"0.0\",\"tax_amount\":\"0.0\",\"total"
                + "_amount\":\"100.0\",\"credit_amount\":\"0.0\",\"paid_amount\":\"0.0\",\"refund_a"
                + "mount\":\"0.0\",\"due_amount\":\"100.0\"},{\"uid\":\"inv_8hr3546wdwxkr\",\"site_"
                + "id\":51288,\"customer_id\":21687670,\"subscription_id\":22007627,\"number\":\"12"
                + "3\",\"sequence_number\":123,\"issue_date\":\"2018-09-18\",\"due_date\":\"2018-09"
                + "-18\",\"paid_date\":\"2018-09-18\",\"status\":\"paid\",\"collection_method\":\"a"
                + "utomatic\",\"payment_instructions\":\"Make checks payable to Acme, Inc.\",\"curr"
                + "ency\":\"USD\",\"consolidation_level\":\"none\",\"parent_invoice_uid\":null,\"pa"
                + "rent_invoice_number\":null,\"group_primary_subscription_id\":null,\"product_name"
                + "\":\"Trial End - Free\",\"product_family_name\":\"Billing Plans\",\"seller\":{"
                + "\"name\":\"General Goods\",\"address\":{\"street\":\"123 General Goods Way\",\"l"
                + "ine2\":\"Apt. 10\",\"city\":\"Boston\",\"state\":\"MA\",\"zip\":\"02120\",\"coun"
                + "try\":\"US\"},\"phone\":\"555-555-1212\"},\"customer\":{\"chargify_id\":21687670"
                + ",\"first_name\":\"Hello\",\"last_name\":\"World\",\"organization\":\"123\",\"ema"
                + "il\":\"example@example.com\"},\"memo\":\"Please pay within 15 days.\",\"billing_"
                + "address\":{\"street\":\"123 Anywhere Street\",\"line2\":\"\",\"city\":\"Boston"
                + "\",\"state\":\"MA\",\"zip\":\"02120\",\"country\":\"US\"},\"shipping_address\":{"
                + "\"street\":\"\",\"line2\":\"\",\"city\":\"Boston\",\"state\":\"AL\",\"zip\":\"02"
                + "120\",\"country\":\"US\"},\"subtotal_amount\":\"0.0\",\"discount_amount\":\"0.0"
                + "\",\"tax_amount\":\"0.0\",\"total_amount\":\"0.0\",\"credit_amount\":\"0.0\",\"p"
                + "aid_amount\":\"0.0\",\"refund_amount\":\"0.0\",\"due_amount\":\"0.0\"},{\"uid\":"
                + "\"inv_8hjtk8bz56bbp\",\"site_id\":51288,\"customer_id\":20137757,\"subscription_"
                + "id\":20541100,\"number\":\"122\",\"sequence_number\":122,\"issue_date\":\"2018-0"
                + "9-10\",\"due_date\":\"2018-09-10\",\"paid_date\":\"2018-09-10\",\"status\":\"pai"
                + "d\",\"collection_method\":\"automatic\",\"payment_instructions\":\"Make checks p"
                + "ayable to Acme, Inc.\",\"currency\":\"USD\",\"consolidation_level\":\"none\",\"p"
                + "arent_invoice_uid\":null,\"parent_invoice_number\":null,\"group_primary_subscrip"
                + "tion_id\":null,\"product_name\":\"$0 Product\",\"product_family_name\":\"Billing"
                + " Plans\",\"seller\":{\"name\":\"General Goods\",\"address\":{\"street\":\"123 Ge"
                + "neral Goods Way\",\"line2\":\"Apt. 10\",\"city\":\"Boston\",\"state\":\"MA\",\"z"
                + "ip\":\"02120\",\"country\":\"US\"},\"phone\":\"555-555-1212\"},\"customer\":{\"c"
                + "hargify_id\":20137757,\"first_name\":\"Sasha\",\"last_name\":\"Example\",\"organ"
                + "ization\":\"\",\"email\":\"example@example.com\"},\"memo\":\"Please pay within 1"
                + "5 days.\",\"billing_address\":{\"street\":\"123 I Love Cats Way\",\"line2\":\"\""
                + ",\"city\":\"Catville\",\"state\":\"MA\",\"zip\":\"90210\",\"country\":\"US\"},"
                + "\"shipping_address\":{\"street\":\"123 I Love Cats Way\",\"line2\":\"\",\"city"
                + "\":\"Catville\",\"state\":\"AL\",\"zip\":\"90210\",\"country\":\"US\"},\"subtota"
                + "l_amount\":\"0.0\",\"discount_amount\":\"0.0\",\"tax_amount\":\"0.0\",\"total_am"
                + "ount\":\"0.0\",\"credit_amount\":\"0.0\",\"paid_amount\":\"0.0\",\"refund_amount"
                + "\":\"0.0\",\"due_amount\":\"0.0\"}],\"public_url\":\"https://www.chargifypay.com"
                + "/invoice/inv_8jzrw74xq8kxr?token=fb6kpjz5rcr2vttyjs4rcv6y\"}",
                TestHelper.convertStreamToString(httpResponse.getResponse().getRawBody()), 
                false, true, false));
    }

    /**
     * This endpoint returns a list of invoice events. Each event contains event "data" (such as an
     * applied payment) as well as a snapshot of the `invoice` at the time of event completion.
     * Exposed event types are: + issue_invoice + apply_credit_note + apply_payment + refund_invoice
     * + void_invoice + void_remainder + backport_invoice + change_invoice_status +
     * change_invoice_collection_method + remove_payment Invoice events are returned in ascending
     * order. If both a `since_date` and `since_id` are provided in request parameters, the
     * `since_date` will be used. Note - invoice events that occurred prior to 09/05/2018 __will
     * not__ contain an `invoice` snapshot.
     * @throws Throwable exception if occurs.
     */
    @Test
    public void testTestListInvoiceEvents() throws Exception {
        // Parameters for the API call
        String sinceDate = null;
        Integer sinceId = null;
        Integer page = 1;
        Integer perPage = 100;
        String invoiceUid = null;
        String withChangeInvoiceStatus = null;
        List<InvoiceEventTypeEnum> eventTypes = null;

        // Set callback and perform API call
        ListInvoiceEventsResponse result = null;
        try {
            result = controller.listInvoiceEvents(sinceDate, sinceId, page, perPage, invoiceUid, withChangeInvoiceStatus, eventTypes);
        } catch (ApiException e) {
            // Empty block
        }

        // Test whether the response is null
        assertNotNull("Response is null", 
                httpResponse.getResponse());
        // Test response code
        assertEquals("Status is not 200", 
                200, httpResponse.getResponse().getStatusCode());

        // Test headers
        Map<String, String> headers = new LinkedHashMap<String, String>();
        headers.put("Content-Type", "application/json");
        
        assertTrue("Headers do not match", TestHelper.areHeadersProperSubsetOf(
                headers, httpResponse.getResponse().getHeaders().asSimpleMap(), true));

        // Test whether the captured response is as we expected
        assertNotNull("Result does not exist", 
                result);
        assertTrue("Response body does not match in keys", 
                TestHelper.isJsonObjectProperSubsetOf(
                "{\"events\":[{\"id\":83,\"event_type\":\"apply_payment\",\"event_data\":{\"memo\":"
                + "\"Non-Resumable Canceled On Purpose - Standard Plan: Renewal payment\",\"origina"
                + "l_amount\":\"168.61\",\"applied_amount\":\"168.61\",\"transaction_time\":\"2018-"
                + "08-01T16:00:00Z\",\"payment_method\":{\"card_brand\":\"visa\",\"card_expiration"
                + "\":\"12/2022\",\"last_four\":null,\"masked_card_number\":\"XXXX-XXXX-XXXX-1111"
                + "\",\"type\":\"credit_card\"},\"transaction_id\":126,\"consolidation_level\":\"no"
                + "ne\",\"parent_invoice_number\":null},\"timestamp\":\"2018-08-01T16:00:00Z\",\"in"
                + "voice\":{\"id\":614942008934401500,\"uid\":\"inv_8gk5bwkct3gqt\",\"site_id\":20,"
                + "\"customer_id\":6,\"subscription_id\":10,\"number\":\"25\",\"sequence_number\":2"
                + "5,\"transaction_time\":\"2018-08-01T16:00:00Z\",\"created_at\":\"2018-08-01T16:0"
                + "0:00Z\",\"updated_at\":\"2018-08-01T16:00:00Z\",\"issue_date\":\"2018-08-01\","
                + "\"due_date\":\"2018-08-01\",\"paid_date\":\"2018-08-01\",\"status\":\"paid\",\"r"
                + "ole\":\"renewal\",\"collection_method\":\"automatic\",\"payment_instructions\":"
                + "\"Please make checks payable to \\\"Acme, Inc.\\\"\",\"currency\":\"USD\",\"cons"
                + "olidation_level\":\"none\",\"parent_invoice_id\":null,\"subscription_group_id\":"
                + "null,\"parent_invoice_number\":null,\"product_name\":\"Standard Plan\",\"product"
                + "_family_name\":\"Cloud Compute Servers\",\"seller\":{\"name\":\"Acme, Inc.\",\"a"
                + "ddress\":{\"street\":null,\"line2\":null,\"city\":null,\"state\":null,\"zip\":nu"
                + "ll,\"country\":null},\"phone\":\"555-555-1234 x137\",\"logo_url\":null},\"custom"
                + "er\":{\"chargify_id\":6,\"first_name\":\"Non-Resumable\",\"last_name\":\"Cancele"
                + "d On Purpose\",\"organization\":null,\"email\":\"evan4@example.com\"},\"payer\":"
                + "{\"chargify_id\":6,\"first_name\":\"Non-Resumable\",\"last_name\":\"Canceled On "
                + "Purpose\",\"organization\":null,\"email\":\"evan4@example.com\"},\"recipient_ema"
                + "ils\":[],\"terms\":\"due_on_receipt\",\"memo\":\"Thanks for your business! If yo"
                + "u have any questions, please contact your account manager.\",\"billing_address"
                + "\":{\"street\":\"200 Billing Rd.\",\"line2\":\"Suite 100\",\"city\":\"Needham\","
                + "\"state\":\"MA\",\"zip\":\"02494\",\"country\":\"US\"},\"shipping_address\":{\"s"
                + "treet\":\"100 Shipping St.\",\"line2\":\"Apt 200\",\"city\":\"Pleasantville\","
                + "\"state\":\"NC\",\"zip\":\"12345\",\"country\":\"US\"},\"line_items\":[{\"uid\":"
                + "\"li_8gk5bwkct3gqk\",\"title\":\"Standard Plan\",\"description\":\"08/01/2018 - "
                + "09/01/2018\",\"quantity\":\"1.0\",\"unit_price\":\"99.0\",\"subtotal_amount\":"
                + "\"99.0\",\"discount_amount\":\"9.9\",\"tax_amount\":\"6.01425\",\"total_amount"
                + "\":\"95.11425\",\"tiered_unit_price\":false,\"period_range_start\":\"2018-08-01"
                + "\",\"period_range_end\":\"2018-09-01\",\"transaction_id\":120,\"product_id\":84,"
                + "\"product_version\":1,\"component_id\":null,\"price_point_id\":null,\"hide\":fal"
                + "se,\"component_cost_data\":null},{\"uid\":\"li_8gk5bwkct3gqm\",\"title\":\"Small"
                + " Instance (Hourly)\",\"description\":\"07/22/2018 - 08/01/2018\",\"quantity\":"
                + "\"162.0\",\"unit_price\":\"0.09567901\",\"subtotal_amount\":\"15.5\",\"discount_"
                + "amount\":\"1.55\",\"tax_amount\":\"0.941625\",\"total_amount\":\"14.891625\",\"t"
                + "iered_unit_price\":true,\"period_range_start\":\"2018-07-22\",\"period_range_end"
                + "\":\"2018-08-01\",\"transaction_id\":121,\"product_id\":84,\"product_version\":1"
                + ",\"component_id\":76,\"price_point_id\":null,\"hide\":false,\"component_cost_dat"
                + "a\":{\"rates\":[{\"component_code_id\":null,\"price_point_id\":160,\"product_id"
                + "\":84,\"quantity\":\"162.0\",\"amount\":\"15.5\",\"pricing_scheme\":\"tiered\","
                + "\"tiers\":[{\"starting_quantity\":1,\"ending_quantity\":100,\"quantity\":\"100.0"
                + "\",\"unit_price\":\"0.0\",\"amount\":\"0.0\"},{\"starting_quantity\":101,\"endin"
                + "g_quantity\":null,\"quantity\":\"62.0\",\"unit_price\":\"0.25\",\"amount\":\"15."
                + "5\"}]}]}},{\"uid\":\"li_8gk5bwkct3gqn\",\"title\":\"Large Instance (Hourly)\","
                + "\"description\":\"07/22/2018 - 08/01/2018\",\"quantity\":\"194.0\",\"unit_price"
                + "\":\"0.24226804\",\"subtotal_amount\":\"47.0\",\"discount_amount\":\"4.7\",\"tax"
                + "_amount\":\"2.85525\",\"total_amount\":\"45.15525\",\"tiered_unit_price\":true,"
                + "\"period_range_start\":\"2018-07-22\",\"period_range_end\":\"2018-08-01\",\"tran"
                + "saction_id\":122,\"product_id\":84,\"product_version\":1,\"component_id\":77,\"p"
                + "rice_point_id\":null,\"hide\":false,\"component_cost_data\":{\"rates\":[{\"compo"
                + "nent_code_id\":null,\"price_point_id\":161,\"product_id\":84,\"quantity\":\"194."
                + "0\",\"amount\":\"47.0\",\"pricing_scheme\":\"tiered\",\"tiers\":[{\"starting_qua"
                + "ntity\":1,\"ending_quantity\":100,\"quantity\":\"100.0\",\"unit_price\":\"0.0\","
                + "\"amount\":\"0.0\"},{\"starting_quantity\":101,\"ending_quantity\":null,\"quanti"
                + "ty\":\"94.0\",\"unit_price\":\"0.5\",\"amount\":\"47.0\"}]}]}},{\"uid\":\"li_8gk"
                + "5bwkct3gqp\",\"title\":\"IP Addresses\",\"description\":\"08/01/2018 - 09/01/201"
                + "8\",\"quantity\":\"7.0\",\"unit_price\":\"2.0\",\"subtotal_amount\":\"14.0\",\"d"
                + "iscount_amount\":\"1.4\",\"tax_amount\":\"0.8505\",\"total_amount\":\"13.4505\","
                + "\"tiered_unit_price\":false,\"period_range_start\":\"2018-08-01\",\"period_range"
                + "_end\":\"2018-09-01\",\"transaction_id\":123,\"product_id\":84,\"product_version"
                + "\":1,\"component_id\":79,\"price_point_id\":163,\"hide\":false,\"component_cost_"
                + "data\":{\"rates\":[{\"component_code_id\":null,\"price_point_id\":163,\"product_"
                + "id\":84,\"quantity\":\"7.0\",\"amount\":\"14.0\",\"pricing_scheme\":\"per_unit"
                + "\",\"tiers\":[{\"starting_quantity\":1,\"ending_quantity\":null,\"quantity\":\"7"
                + ".0\",\"unit_price\":\"2.0\",\"amount\":\"14.0\"}]}]}}],\"subtotal_amount\":\"175"
                + ".5\",\"discount_amount\":\"17.55\",\"discounts\":[{\"uid\":\"dli_8gk5bwkct3gqq"
                + "\",\"title\":\"Multi-service discount (10%)\",\"description\":null,\"code\":\"MU"
                + "LTI3\",\"source_type\":\"Coupon\",\"source_id\":40,\"discount_type\":\"percentag"
                + "e\",\"percentage\":\"10.0\",\"eligible_amount\":\"175.5\",\"discount_amount\":"
                + "\"17.55\",\"transaction_id\":124,\"line_item_breakouts\":[{\"uid\":\"li_8gk5bwkc"
                + "t3gqk\",\"eligible_amount\":\"99.0\",\"discount_amount\":\"9.9\"},{\"uid\":\"li_"
                + "8gk5bwkct3gqm\",\"eligible_amount\":\"15.5\",\"discount_amount\":\"1.55\"},{\"ui"
                + "d\":\"li_8gk5bwkct3gqn\",\"eligible_amount\":\"47.0\",\"discount_amount\":\"4.7"
                + "\"},{\"uid\":\"li_8gk5bwkct3gqp\",\"eligible_amount\":\"14.0\",\"discount_amount"
                + "\":\"1.4\"}]}],\"tax_amount\":\"10.66\",\"taxes\":[{\"uid\":\"tli_8gk5bwkct3gqr"
                + "\",\"title\":\"NC Sales Tax\",\"description\":null,\"source_type\":\"Tax\",\"sou"
                + "rce_id\":1,\"percentage\":\"6.75\",\"taxable_amount\":\"157.95\",\"tax_amount\":"
                + "\"10.66\",\"transaction_id\":125,\"line_item_breakouts\":[{\"uid\":\"li_8gk5bwkc"
                + "t3gqk\",\"taxable_amount\":\"89.1\",\"tax_amount\":\"6.01425\"},{\"uid\":\"li_8g"
                + "k5bwkct3gqm\",\"taxable_amount\":\"13.95\",\"tax_amount\":\"0.941625\"},{\"uid"
                + "\":\"li_8gk5bwkct3gqn\",\"taxable_amount\":\"42.3\",\"tax_amount\":\"2.85525\"},"
                + "{\"uid\":\"li_8gk5bwkct3gqp\",\"taxable_amount\":\"12.6\",\"tax_amount\":\"0.850"
                + "5\"}],\"tax_component_breakouts\":[{\"tax_rule_id\":1,\"percentage\":\"6.75\","
                + "\"country_code\":\"US\",\"subdivision_code\":\"NC\"}]}],\"credit_amount\":\"0.0"
                + "\",\"refund_amount\":\"0.0\",\"total_amount\":\"168.61\",\"paid_amount\":\"168.6"
                + "1\",\"due_amount\":\"0.0\",\"credits\":[],\"refunds\":[],\"payments\":[{\"memo"
                + "\":\"Non-Resumable Canceled On Purpose - Standard Plan: Renewal payment\",\"orig"
                + "inal_amount\":\"168.61\",\"applied_amount\":\"168.61\",\"transaction_time\":\"20"
                + "18-08-01T16:00:00Z\",\"payment_method\":{\"card_brand\":\"visa\",\"card_expirati"
                + "on\":\"12/2022\",\"last_four\":null,\"masked_card_number\":\"XXXX-XXXX-XXXX-1111"
                + "\",\"type\":\"credit_card\"},\"transaction_id\":126,\"prepayment\":false}],\"cus"
                + "tom_fields\":[],\"display_settings\":{\"hide_zero_subtotal_lines\":false,\"inclu"
                + "de_discounts_on_lines\":false}}}],\"page\":48,\"per_page\":1,\"total_pages\":102"
                + "}",
                TestHelper.convertStreamToString(httpResponse.getResponse().getRawBody()), 
                false, true, false));
    }

    /**
     * This API call should be used when you want to record an external payment against multiple
     * invoices. In order apply a payment to multiple invoices, at minimum, specify the `amount` and
     * `applications` (i.e., `invoice_uid` and `amount`) details. ``` { "payment": { "memo": "to pay
     * the bills", "details": "check number 8675309", "method": "check", "amount": "250.00",
     * "applications": [ { "invoice_uid": "inv_8gk5bwkct3gqt", "amount": "100.00" }, {
     * "invoice_uid": "inv_7bc6bwkct3lyt", "amount": "150.00" } ] } } ``` Note that the invoice
     * payment amounts must be greater than 0. Total amount must be greater or equal to invoices
     * payment amount sum.
     * @throws Throwable exception if occurs.
     */
    @Test
    public void testTestRecordExternalPaymentForInvoices() throws Exception {
        // Parameters for the API call
        CreateMultiInvoicePaymentRequest body = ApiHelper.deserialize(
                "{\"payment\":{\"memo\":\"to pay the bills\",\"details\":\"check number 8675309\","
                + "\"method\":\"check\",\"amount\":\"100.00\",\"applications\":[{\"invoice_uid\":"
                + "\"inv_8gk5bwkct3gqt\",\"amount\":\"50.00\"},{\"invoice_uid\":\"inv_7bc6bwkct3lyt"
                + "\",\"amount\":\"50.00\"}]}}",
                CreateMultiInvoicePaymentRequest.class);

        // Set callback and perform API call
        MultiInvoicePaymentResponse result = null;
        try {
            result = controller.recordExternalPaymentForInvoices(body);
        } catch (ApiException e) {
            // Empty block
        }

        // Test whether the response is null
        assertNotNull("Response is null", 
                httpResponse.getResponse());
        // Test response code
        assertEquals("Status is not 200", 
                200, httpResponse.getResponse().getStatusCode());

        // Test headers
        Map<String, String> headers = new LinkedHashMap<String, String>();
        headers.put("Content-Type", "application/json");
        
        assertTrue("Headers do not match", TestHelper.areHeadersProperSubsetOf(
                headers, httpResponse.getResponse().getHeaders().asSimpleMap(), true));

        // Test whether the captured response is as we expected
        assertNotNull("Result does not exist", 
                result);
        assertTrue("Response body does not match in keys", 
                TestHelper.isJsonObjectProperSubsetOf(
                "{\"payment\":{\"transaction_id\":1,\"total_amount\":\"100.00\",\"currency_code\":"
                + "\"USD\",\"applications\":[{\"invoice_uid\":\"inv_8gk5bwkct3gqt\",\"application_u"
                + "id\":\"pmt_1tr0hgsct3ybx\",\"applied_amount\":\"50.00\"},{\"invoice_uid\":\"inv_"
                + "7bc6bwkct3lyt\",\"application_uid\":\"pmt_2\",\"applied_amount\":\"50.00\"}]}}",
                TestHelper.convertStreamToString(httpResponse.getResponse().getRawBody()), 
                false, true, false));
    }

    /**
     * Credit Notes are like inverse invoices. They reduce the amount a customer owes. By default,
     * the credit notes returned by this endpoint will exclude the arrays of `line_items`,
     * `discounts`, `taxes`, `applications`, or `refunds`. To include these arrays, pass the
     * specific field as a key in the query with a value set to `true`.
     * @throws Throwable exception if occurs.
     */
    @Test
    public void testTestListCreditNotes() throws Exception {
        // Parameters for the API call
        Integer subscriptionId = null;
        Integer page = 1;
        Integer perPage = 20;
        Boolean lineItems = false;
        Boolean discounts = false;
        Boolean taxes = false;
        Boolean refunds = false;
        Boolean applications = false;

        // Set callback and perform API call
        ListCreditNotesResponse result = null;
        try {
            result = controller.listCreditNotes(subscriptionId, page, perPage, lineItems, discounts, taxes, refunds, applications);
        } catch (ApiException e) {
            // Empty block
        }

        // Test whether the response is null
        assertNotNull("Response is null", 
                httpResponse.getResponse());
        // Test response code
        assertEquals("Status is not 200", 
                200, httpResponse.getResponse().getStatusCode());

        // Test headers
        Map<String, String> headers = new LinkedHashMap<String, String>();
        headers.put("Content-Type", "application/json");
        
        assertTrue("Headers do not match", TestHelper.areHeadersProperSubsetOf(
                headers, httpResponse.getResponse().getHeaders().asSimpleMap(), true));

        // Test whether the captured response is as we expected
        assertNotNull("Result does not exist", 
                result);
        assertTrue("Response body does not match in keys", 
                TestHelper.isJsonObjectProperSubsetOf(
                "{\"credit_notes\":[{\"uid\":\"cn_8m9vbd5kkv7kr\",\"site_id\":20,\"customer_id\":3,"
                + "\"subscription_id\":2,\"number\":\"77\",\"sequence_number\":78,\"issue_date\":"
                + "\"2018-12-31\",\"applied_date\":\"2018-12-31\",\"status\":\"applied\",\"currency"
                + "\":\"USD\",\"memo\":\"Refund for overpayment\",\"seller\":{\"name\":\"Acme, Inc."
                + "\",\"address\":{\"street\":\"122 E Houston St\",\"line2\":\"Suite 105\",\"city"
                + "\":\"San Antonio\",\"state\":\"TX\",\"zip\":\"78205\",\"country\":\"US\"},\"phon"
                + "e\":\"555-555-1234 x137\"},\"customer\":{\"chargify_id\":3,\"first_name\":\"Mart"
                + "y\",\"last_name\":\"McFly\",\"organization\":\"Time Travellers, Inc.\",\"email"
                + "\":\"timetraveller1985@example.com\",\"reference\":null},\"billing_address\":{"
                + "\"street\":\"200 Billing Rd.\",\"line2\":\"Suite 100\",\"city\":\"Needham\",\"st"
                + "ate\":\"MA\",\"zip\":\"02494\",\"country\":\"US\"},\"shipping_address\":{\"stree"
                + "t\":\"100 Shipping St.\",\"line2\":\"Apt 200\",\"city\":\"Pleasantville\",\"stat"
                + "e\":\"NC\",\"zip\":\"12345\",\"country\":\"US\"},\"subtotal_amount\":\"208.69341"
                + "779\",\"discount_amount\":\"20.87125167\",\"tax_amount\":\"12.67783387\",\"total"
                + "_amount\":\"200.5\",\"applied_amount\":\"200.5\",\"remaining_amount\":\"0.0\","
                + "\"line_items\":[{\"uid\":\"cnli_8k5jvdzct4h9x\",\"title\":\"IP Addresses: 5 to 1"
                + "0 addresses\",\"description\":\"38.2% credit\",\"quantity\":\"0.9855\",\"unit_pr"
                + "ice\":\"2.0\",\"subtotal_amount\":\"1.971004\",\"discount_amount\":\"0.19862831"
                + "\",\"tax_amount\":\"0.11963536\",\"total_amount\":\"1.89201105\",\"tiered_unit_p"
                + "rice\":false,\"period_range_start\":\"2018-11-30\",\"period_range_end\":\"2018-1"
                + "1-30\",\"product_id\":85,\"product_version\":1,\"component_id\":81,\"price_point"
                + "_id\":165},{\"uid\":\"cnli_8kjttvjcjx8b4\",\"title\":\"Professional Plan\",\"des"
                + "cription\":\"38.2% credit\",\"quantity\":\"0.382\",\"unit_price\":\"299.0\",\"su"
                + "btotal_amount\":\"114.21127834\",\"discount_amount\":\"11.42112783\",\"tax_amoun"
                + "t\":\"6.93833516\",\"total_amount\":\"109.72848567\",\"tiered_unit_price\":false"
                + ",\"period_range_start\":\"2018-12-30\",\"period_range_end\":\"2018-12-30\",\"pro"
                + "duct_id\":85,\"product_version\":1,\"component_id\":null,\"price_point_id\":null"
                + "},{\"uid\":\"cnli_8kjttvjknzhx7\",\"title\":\"Small Instance (Hourly)\",\"descri"
                + "ption\":\"38.2% credit\",\"quantity\":\"74.8676\",\"unit_price\":\"0.12244898\","
                + "\"subtotal_amount\":\"9.16746047\",\"discount_amount\":\"0.91674605\",\"tax_amou"
                + "nt\":\"0.55692322\",\"total_amount\":\"8.80763764\",\"tiered_unit_price\":true,"
                + "\"period_range_start\":\"2018-11-30\",\"period_range_end\":\"2018-11-30\",\"prod"
                + "uct_id\":85,\"product_version\":1,\"component_id\":78,\"price_point_id\":null},{"
                + "\"uid\":\"cnli_8kjttvjnmh25w\",\"title\":\"Large Instance (Hourly)\",\"descripti"
                + "on\":\"38.2% credit\",\"quantity\":\"183.3492\",\"unit_price\":\"0.39583333\","
                + "\"subtotal_amount\":\"72.57572871\",\"discount_amount\":\"7.25757287\",\"tax_amo"
                + "unt\":\"4.40897552\",\"total_amount\":\"69.72713136\",\"tiered_unit_price\":true"
                + ",\"period_range_start\":\"2018-11-30\",\"period_range_end\":\"2018-11-30\",\"pro"
                + "duct_id\":85,\"product_version\":1,\"component_id\":79,\"price_point_id\":null},"
                + "{\"uid\":\"cnli_8kjttvjqn86kc\",\"title\":\"Email Messages\",\"description\":\"3"
                + "8.2% credit\",\"quantity\":\"10076.9489\",\"unit_price\":\"0.00031045\",\"subtot"
                + "al_amount\":\"3.12839588\",\"discount_amount\":\"0.31322157\",\"tax_amount\":\"0"
                + ".19002427\",\"total_amount\":\"3.00519858\",\"tiered_unit_price\":true,\"period_"
                + "range_start\":\"2018-11-30\",\"period_range_end\":\"2018-11-30\",\"product_id\":"
                + "85,\"product_version\":1,\"component_id\":80,\"price_point_id\":null},{\"uid\":"
                + "\"cnli_8kjttvjtxxbdd\",\"title\":\"IP Addresses\",\"description\":\"38.2% credit"
                + "\",\"quantity\":\"3.8198\",\"unit_price\":\"2.0\",\"subtotal_amount\":\"7.639550"
                + "39\",\"discount_amount\":\"0.76395504\",\"tax_amount\":\"0.46410269\",\"total_am"
                + "ount\":\"7.33969804\",\"tiered_unit_price\":false,\"period_range_start\":\"2018-"
                + "12-30\",\"period_range_end\":\"2018-12-30\",\"product_id\":85,\"product_version"
                + "\":1,\"component_id\":81,\"price_point_id\":165}],\"discounts\":[{\"uid\":\"cndl"
                + "i_8k5jvdzct4h9y\",\"title\":\"Multi-service discount (10%)\",\"code\":\"MULTI3"
                + "\",\"source_type\":\"Coupon\",\"source_id\":40,\"discount_type\":\"percentage\","
                + "\"percentage\":\"10.0\",\"eligible_amount\":\"208.69341779\",\"discount_amount"
                + "\":\"20.87125167\",\"line_item_breakouts\":[{\"uid\":\"cnli_8k5jvdzct4h9x\",\"el"
                + "igible_amount\":\"1.971004\",\"discount_amount\":\"0.19862831\"},{\"uid\":\"cnli"
                + "_8kjttvjcjx8b4\",\"eligible_amount\":\"114.21127834\",\"discount_amount\":\"11.4"
                + "2112783\"},{\"uid\":\"cnli_8kjttvjknzhx7\",\"eligible_amount\":\"9.16746047\","
                + "\"discount_amount\":\"0.91674605\"},{\"uid\":\"cnli_8kjttvjnmh25w\",\"eligible_a"
                + "mount\":\"72.57572871\",\"discount_amount\":\"7.25757287\"},{\"uid\":\"cnli_8kjt"
                + "tvjqn86kc\",\"eligible_amount\":\"3.12839588\",\"discount_amount\":\"0.31322157"
                + "\"},{\"uid\":\"cnli_8kjttvjtxxbdd\",\"eligible_amount\":\"7.63955039\",\"discoun"
                + "t_amount\":\"0.76395504\"}]}],\"taxes\":[{\"uid\":\"cntli_8k5jvdzct4h9z\",\"titl"
                + "e\":\"NC Sales Tax\",\"source_type\":\"Tax\",\"source_id\":1,\"percentage\":\"6."
                + "75\",\"taxable_amount\":\"187.82216613\",\"tax_amount\":\"12.67783387\",\"line_i"
                + "tem_breakouts\":[{\"uid\":\"cnli_8k5jvdzct4h9x\",\"taxable_amount\":\"1.77237569"
                + "\",\"tax_amount\":\"0.11963536\"},{\"uid\":\"cnli_8kjttvjcjx8b4\",\"taxable_amou"
                + "nt\":\"102.7901505\",\"tax_amount\":\"6.93833516\"},{\"uid\":\"cnli_8kjttvjknzhx"
                + "7\",\"taxable_amount\":\"8.25071442\",\"tax_amount\":\"0.55692322\"},{\"uid\":"
                + "\"cnli_8kjttvjnmh25w\",\"taxable_amount\":\"65.31815584\",\"tax_amount\":\"4.408"
                + "97552\"},{\"uid\":\"cnli_8kjttvjqn86kc\",\"taxable_amount\":\"2.81517432\",\"tax"
                + "_amount\":\"0.19002427\"},{\"uid\":\"cnli_8kjttvjtxxbdd\",\"taxable_amount\":\"6"
                + ".87559535\",\"tax_amount\":\"0.46410269\"}]}],\"applications\":[{\"uid\":\"cdt_8"
                + "m9vbdbdwd28n\",\"transaction_time\":\"2018-12-31T21:19:28Z\",\"invoice_uid\":\"i"
                + "nv_8k5jvdzct4hb2\",\"memo\":\"Refund for overpayment\",\"applied_amount\":\"200."
                + "5\"}],\"refunds\":[{\"transaction_id\":329,\"payment_id\":39,\"memo\":\"Refund f"
                + "or overpayment\",\"original_amount\":\"524.9\",\"applied_amount\":\"200.5\"}]}]}"
                + "",
                TestHelper.convertStreamToString(httpResponse.getResponse().getRawBody()), 
                false, true, false));
    }

}
